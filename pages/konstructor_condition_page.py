from selenium.webdriver import Keys

from pages.base_page import BasePage
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_save as condsave
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_edit as condedit
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_status as condstatus
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_filter_directory as condfildic
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_filter as condfil
from locators.konstructor_condtion_locators import Konstructor_Condition_Locators_edits_predict as condedpr
from locators.konstructor_locator import CreateTable as table

class Test_Konstructors_Condition(BasePage):
    def create_table_test1(self):  #1.Предварительная подготовка
        self.autorization()
        self.element_is_present(table.ADD_TABLE).click()
        Table_name = self.element_is_visible(table.TABLE_NAME)
        Table_name.click()
        Table_name.send_keys("Тест 1 21.04.2023")
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.SECOND_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Строка')
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.THiRD_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Число с плавающей точкой')
        self.element_is_visible(table.TYPE).click()
        self.element_is_visible(table.TYPE_FLOAT).click()
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.FOUR_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Дата')
        self.element_is_visible(table.TYPE).click()
        self.element_is_visible(table.TYPE_DATA).click()
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.FIFTH_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Лог.значение')
        self.element_is_visible(table.TYPE).click()
        self.element_is_visible(table.TYPE_BOOLEAN_VALUE).click()
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.SIXTH_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Cправочник')
        self.element_is_visible(table.TYPE).click()
        self.element_is_visible(table.TYPE_DIRECTORY).click()
        self.element_is_visible(table.SETTING_ADDITINAL).click()
        self.element_is_visible(table.NAMES_ADDITINAL).click()
        names_additional = self.element_is_visible(table.INPUT_NAMES_ADDITINAL)
        names_additional.send_keys("Тип изделия ПНППК 11.04.2023")
        names_additional.send_keys(Keys.ENTER)
        self.element_is_visible(table.UNIQUE_COLUMN).click()
        ID = self.element_is_visible(table.INPUT_UNIQUE_COLUMN)
        ID.send_keys("id")
        ID.send_keys(Keys.ENTER)
        self.element_is_visible(table.COLUMN_VIEW).click()
        view = self.element_is_visible(table.INPUT_COLUMN_VIEW)
        view.send_keys("Тип изделия для отображения")
        view.send_keys(Keys.ENTER)
        self.element_is_visible(table.ADD_ROW).click()
        self.element_is_visible(table.SEVENTH_ROW).click()
        names = self.element_is_visible(table.NAMES)
        names.click()
        names.clear()
        names.send_keys('Множественный справочник')
        self.element_is_visible(table.TYPE).click()
        self.element_is_visible(table.TYPE_DIRECTORY).click()
        self.element_is_visible(table.NAMES_ADDITINAL).click()
        names_additional = self.element_is_visible(table.INPUT_NAMES_ADDITINAL)
        names_additional.send_keys("Тип изделия ПНППК 11.04.2023")
        names_additional.send_keys(Keys.ENTER)
        self.element_is_visible(table.UNIQUE_COLUMN).click()
        ID = self.element_is_visible(table.INPUT_UNIQUE_COLUMN)
        ID.send_keys("id")
        ID.send_keys(Keys.ENTER)
        self.element_is_visible(table.COLUMN_VIEW).click()
        view = self.element_is_visible(table.INPUT_COLUMN_VIEW)
        view.send_keys("Тип изделия для отображения")
        view.send_keys(Keys.ENTER)
        self.element_is_present(table.MANY_CHOICE).click()
        self.element_is_visible(table.SAVE).click()
    def konstructor_condition_save(self):  #2.Конструктор условий. Сохранение
        self.autorization()
        self.element_is_visible(condsave.TEST1_EDITS).click()
        self.element_is_visible(condsave.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condsave.ADD_CONTITION).click()
        Names=self.element_is_visible(condsave.NAMES_CONDITION)
        Names.click()
        Names.clear()
        Names.send_keys("Тест 1.Сохранение")
        self.element_is_visible(condsave.TEXT_ERROR_INPUT).send_keys("При сохранении в статус Годен число с плав.точкой должно быть <1,5, если выбрано изделие - БЧЭ-МД-01. Иначе >5,5")
        self.element_is_visible(condsave.CONDITION_SAVE_INSTALLER).click()
        self.element_is_visible(condsave.ALREADY).click()
        self.element_is_visible(condsave.CONDITION_SAVE_INSTALLER).click()
        self.element_is_visible(condsave.ADD_GROUP_FILTERS).click()
        self.element_is_visible(condsave.OR_FIRST_ROWS).click()
        self.element_is_visible(condsave.ADD_FILTERS_TWO_ROWS).click()
        self.element_is_visible(condsave.ADD_FILTERS_TWO_ROWS).click()
        self.element_is_visible(condsave.FIRST_ROW_SECOND_INPUT).click()
        self.element_is_visible(condsave.ADDITIONAL).click()
        self.element_is_visible(condsave.FIRST_ROW_FOURTH_INPUT).click()
        first_row4 = self.element_is_visible(condsave.INPUT_EQUALS)
        first_row4.send_keys("SQL")
        first_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.FIRST_ROW_FIFTH_INPUT).send_keys("232")
        self.element_is_visible(condsave.SECOND_ROW_SECOND_INPUT).click()
        second_row2 = self.element_is_visible(condsave.INPUT_EQUALS)
        second_row2.send_keys("Число с плавающей точкой")
        second_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.SECOND_ROW_THIRD_INPUT).click()
        second_row3 = self.element_is_visible(condsave.INPUT_EQUALS)
        second_row3.send_keys("<")
        second_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.SECOND_ROW_FOURTH_INPUT).click()
        second_row4 = self.element_is_visible(condsave.INPUT_EQUALS)
        second_row4.send_keys("SQL")
        second_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.SECOND_ROW_FIFTH_INPUT).send_keys("1.5")
        self.element_is_visible(condsave.ADD_GROUP_FILTERS).click()
        self.element_is_visible(condsave.ADD_GROUP_FILTERS3).click()
        self.element_is_visible(condsave.ADD_FILTERS3).click()
        self.element_is_visible(condsave.OR_THIRD_ROWS).click()
        self.element_is_visible(condsave.ADD_FILTERS4).click()
        self.element_is_visible(condsave.ADD_FILTERS4).click()
        self.element_is_visible(condsave.THIRD_ROW_SECOND_INPUT).click()
        self.element_is_visible(condsave.ADDITIONAL).click()
        self.element_is_visible(condsave.THIRD_ROW_THIRD_INPUT).click()
        self.element_is_visible(condsave.NOT_EQUALS).click()
        self.element_is_visible(condsave.THIRD_ROW_FOURTH_INPUT).click()
        third_row4= self.element_is_visible(condsave.INPUT_EQUALS)
        third_row4.send_keys("SQL")
        third_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.THIRD_ROW_FIFTH_INPUT).send_keys("232")
        self.element_is_visible(condsave.FOURTH_ROW_SECOND_INPUT).click()
        self.element_is_visible(condsave.ADDITIONAL).click()
        self.element_is_visible(condsave.FOURTH_ROW_THIRD_INPUT).click()
        fourth_row2 = self.element_is_visible(condsave.INPUT_EQUALS)
        fourth_row2.send_keys("Пусто")
        fourth_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.FIFTH_ROW_SECOND_INPUT).click()
        fifth_row2 = self.element_is_visible(condsave.INPUT_EQUALS)
        fifth_row2.send_keys("Число с плавающей точкой")
        fifth_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.FIFTH_ROW_THIRD_INPUT).click()
        fifth_row3 = self.element_is_visible(condsave.INPUT_EQUALS)
        fifth_row3.send_keys(">")
        fifth_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.FIFTH_ROW_FOURTH_INPUT).click()
        fifth_row4 = self.element_is_visible(condsave.INPUT_EQUALS)
        fifth_row4.send_keys("SQL")
        fifth_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condsave.FIFTH_ROW_FIFTH_INPUT).send_keys(5.5)
        self.element_is_visible(condsave.SAVE_CONDITION).click()
        self.element_is_visible(condsave.SAVE).click()

    def konstructor_condition_edit(self):  #3.Конструктор условий. Редактирование
        self.autorization()
        self.element_is_visible(condedit.TEST1_EDITS).click()
        self.element_is_visible(condedit.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condedit.EDITS_CONDITION).click()
        self.element_is_visible(condedit.ADD_CONTITION).click()
        self.element_is_visible(condedit.ADD_GROUP_FILTERS_EDIT).click()
        self.element_is_present(condedit.OR_SECOND_ROWS).click()
        self.element_is_visible(condedit.ADD_FILTERS_EDIT2).click()
        self.element_is_visible(condedit.ADD_FILTERS_EDIT2).click()
        self.element_is_visible(condedit.ADD_FILTERS_EDIT).click()
        self.element_is_visible(condedit.EDIT_FIRST_SECOND_INPUT).click()
        Names=self.element_is_visible(condedit.EDITS_NAME_CONDITION)
        Names.click()
        Names.clear()
        Names.send_keys('Если статус "Черновик" и Лог.знач = пусто или False, то тогда поле "Дата" можно редактировать ')
        self.element_is_visible(condedit.EDITS_ROW).click()
        row=self.element_is_visible(condedit.INPUT_EDITS_ROW)
        row.send_keys("Дата")
        self.element_is_visible(condedit.INPUT_FIRST_EDITS_ROW).click()
        self.element_is_visible(condedit.EDITS_ROW).click()
        self.element_is_visible(condedit.EDIT_FIRST_SECOND_INPUT).click()
        first_row2 = self.element_is_visible(condedit.INPUT_TEXT)
        first_row2.send_keys("Лог.значение")
        first_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_FIRST_THIRD_INPUT).click()
        first_row3 = self.element_is_visible(condedit.INPUT_TEXT)
        first_row3.send_keys("Пусто")
        first_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_SECOND_SECOND_INPUT).click()
        second_row2 = self.element_is_visible(condedit.INPUT_TEXT)
        second_row2.send_keys("Лог.значение")
        second_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_SECOND_FOURTH_INPUT).click()
        second_row4 = self.element_is_visible(condedit.INPUT_TEXT)
        second_row4.send_keys("SQL")
        second_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_SECOND_FIFTH_INPUT).send_keys("0")
        self.element_is_visible(condedit.EDIT_THIRD_FIRST_INPUT).click()
        third_row1 = self.element_is_visible(condedit.INPUT_TEXT)
        third_row1.send_keys("Статус строки")
        third_row1.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_THIRD_FOURTH_INPUT).click()
        third_row4 = self.element_is_visible(condedit.INPUT_TEXT)
        third_row4.send_keys("Статус")
        third_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.EDIT_THIRD_FIFTH_INPUT).click()
        third_row5 = self.element_is_visible(condedit.INPUT_TEXT)
        third_row5.send_keys("Готов")
        third_row5.send_keys(Keys.ENTER)
        self.element_is_visible(condedit.SAVE_CONDITION).click()
        #self.element_is_visible(condedit.SAVE).click()

    def konstructor_condition_status(self):  #4.Конструктор условий. Перевод в статусы
        self.autorization()
        self.element_is_visible(condstatus.TEST1_EDITS).click()
        self.element_is_visible(condstatus.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condstatus.TRANSLITION_STATUS).click()
        self.element_is_visible(condstatus.ADD_STATUS).click()
        Names=self.element_is_visible(condstatus.NAMES_TRANSLITION_STATUS)
        Names.clear()
        Names.send_keys("Тест 4.Перевод в статус")
        self.element_is_visible(condstatus.TEXT_ERROR_TRANSLITION_STATUS).send_keys('Строку в статус Готов может переводить только ее создатель, причем поле "Строка" должно быть равным good или ok.')
        self.element_is_visible(condstatus.CHOISE_TRANSLITION_STATUS).click()
        self.element_is_visible(condstatus.INPUT_CHOISE_TRANSLITION_STATUS).send_keys("Готов")
        self.element_is_visible(condstatus.ENTER_CHOISE_TRANSLITION_STATUS).click()
        self.element_is_visible(condstatus.CHOISE_TRANSLITION_STATUS).click()
        self.element_is_visible(condstatus.ADD_GROUP_FILTERS_STATUS).click()
        self.element_is_visible(condstatus.FIRST_OR_STATUS).click()
        self.element_is_visible(condstatus.ADD_FILTERS_STATUS).click()
        self.element_is_visible(condstatus.ADD_FILTERS_STATUS2).click()
        self.element_is_visible(condstatus.ADD_FILTERS_STATUS2).click()
        self.element_is_visible(condstatus.STATUS_FIRST_FIRST_INPUT).click()
        first_row=self.element_is_visible(condstatus.INPUT_TEXT)
        first_row.send_keys("Текущий пользователь")
        first_row.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_FIRST_FOURTH_INPUT).click()
        first_row4 = self.element_is_visible(condstatus.INPUT_TEXT)
        first_row4.send_keys("Создатель строки")
        first_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_SECOND_SECOND_INPUT).click()
        second_row2 = self.element_is_visible(condstatus.INPUT_TEXT)
        second_row2.send_keys("Строка")
        second_row2.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_SECOND_THIRTH_INPUT).click()
        second_row3 = self.element_is_visible(condstatus.INPUT_TEXT)
        second_row3.send_keys("in")
        second_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_SECOND_FOURTH_INPUT).click()
        second_row4 = self.element_is_visible(condstatus.INPUT_TEXT)
        second_row4.send_keys("SQL")
        second_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_SECOND_FIFTH_INPUT).send_keys('("good", "ok")')
        self.element_is_visible(condstatus.STATUS_THIRD_FIRST_INPUT).click()
        third_row1 = self.element_is_visible(condstatus.INPUT_TEXT)
        third_row1.send_keys("Статус строки")
        third_row1.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_THIRD_FOURTH_INPUT).click()
        third_row4 = self.element_is_visible(condstatus.INPUT_TEXT)
        third_row4.send_keys("Статус")
        third_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.STATUS_THIRD_FIFTH_INPUT).click()
        third_row5 = self.element_is_visible(condstatus.INPUT_TEXT)
        third_row5.send_keys("Готов")
        third_row5.send_keys(Keys.ENTER)
        self.element_is_visible(condstatus.SAVE_CONDITION).click()
        self.element_is_visible(condstatus.SAVE).click()

    def konstructor_condition_filter_directory(self):   #5.Конструктор условий. Фильтрация в качестве справочника
        self.autorization()
        self.element_is_visible(condfildic.EDITS_TABLE_PNPPK).click()
        self.element_is_visible(condfildic.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condfildic.FILTERS_DIRECTORY).click()
        self.element_is_visible(condfildic.ADD_FILTERS_DIRECTORY).click()
        Names=self.element_is_visible(condfildic.NAMES_FILTERS_DIRECTORY)
        Names.clear()
        Names.send_keys("Тест 5.Фильтрация в качестве справочника")
        self.element_is_visible(condfildic.CHOICE_DATA).click()
        self.element_is_visible(condfildic.ALL_CHOICE).click()
        self.element_is_visible(condfildic.CHOICE_DATA).click()
        self.element_is_visible(condfildic.ADD_FILTERS).click()
        self.element_is_visible(condfildic.FILTERS_DIRECTORY_FIRST_THIRTH_INPUT).click()
        first_row3 = self.element_is_visible(condfildic.INPUT_DATA)
        first_row3.send_keys("in")
        first_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condfildic.FILTERS_DIRECTORY_FIRST_FOURTH_INPUT).click()
        first_row3 = self.element_is_visible(condfildic.INPUT_DATA)
        first_row3.send_keys("SQL")
        first_row3.send_keys(Keys.ENTER)
        self.element_is_visible(condfildic.FILTERS_DIRECTORY_FIRST_FIFTH_INPUT).send_keys("11,232")
        self.element_is_visible(condfildic.SAVE_CONDITION).click()
        self.element_is_visible(condfildic.SAVE).click()

    def konstructor_condition_filter(self):  # 6.Конструктор условий. Фильтрация
        self.autorization()
        self.element_is_visible(condfil.TEST1_EDITS).click()
        self.element_is_visible(condfil.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condfil.FILTERS).click()
        self.element_is_visible(condfil.ADD_FILTERS).click()
        Names=self.element_is_visible(condfil.NAMES_FILTERS)
        Names.clear()
        Names.send_keys("Тест 5.Фильтрация")
        self.element_is_visible(condfil.FIRST_OR).click()
        self.element_is_visible(condfil.FILTERS_ADD_GROUP_FILTERS).click()
        self.element_is_visible(condfil.FILTERS_ADD_FILTERS).click()
        self.element_is_visible(condfil.FILTERS_ADD_FILTERS2).click()
        self.element_is_visible(condfil.FILTERS_ADD_FILTERS2).click()
        self.element_is_visible(condfil.FILTERS_FIRST_FIRST_INPUT).click()
        first_row1 = self.element_is_visible(condfil.INPUT_DATA)
        first_row1.send_keys("Статус строки")
        first_row1.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_FIRST_FOURTH_INPUT).click()
        first_row4 = self.element_is_visible(condfil.INPUT_DATA)
        first_row4.send_keys("Статус")
        first_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_SECOND_FIRST_INPUT).click()
        second_row1 = self.element_is_visible(condfil.INPUT_DATA)
        second_row1.send_keys("Текущий пользователь")
        second_row1.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_SECOND_FOURTH_INPUT).click()
        second_row4 = self.element_is_visible(condfil.INPUT_DATA)
        second_row4.send_keys("Пользователь")
        second_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_SECOND_FIFTH_INPUT).click()
        second_row5 = self.element_is_visible(condfil.INPUT_DATA)
        second_row5.send_keys("Тестовый пользователь")
        second_row5.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_THIRD_FIRST_INPUT).click()
        third_row1 = self.element_is_visible(condfil.INPUT_DATA)
        third_row1.send_keys("Текущий пользователь")
        third_row1.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_THIRD_THIRD_INPUT).click()
        self.element_is_visible(condfil.NOT_EQUALS).click()
        self.element_is_visible(condfil.FILTERS_THIRD_THIRD_INPUT).click()
        self.element_is_visible(condfil.FILTERS_THIRD_FOURTH_INPUT).click()
        third_row4 = self.element_is_visible(condfil.INPUT_DATA)
        third_row4.send_keys("Пользователь")
        third_row4.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.FILTERS_THIRD_FIFTH_INPUT).click()
        third_row5 = self.element_is_visible(condfil.INPUT_DATA)
        third_row5.send_keys("Тестовый пользователь")
        third_row5.send_keys(Keys.ENTER)
        self.element_is_visible(condfil.SAVE_CONDITION).click()
        self.element_is_visible(condfil.SAVE).click()


    def konstructor_condition_edits_predict(self):  # 8.Конструктор условий. Изменение предикатов
        self.autorization()
        self.element_is_visible(condedpr.TEST1_EDITS).click()
        self.element_is_visible(condedpr.KONSTRUCTOR_CONDITION).click()
        self.element_is_visible(condedpr.EDITS_SAVE).click()
        text_error=self.element_is_visible(condedpr.TEXT_ERROR_INPUT)
        text_error.clear()
        text_error.send_keys("При сохранении в статус Годен число с плав.точкой должно быть <1,5, если выбрано изделие - Гироскоп. Иначе >5,5")
        self.element_is_visible(condedpr.SAVE_CONDITION).click()
        self.element_is_visible(condedpr.SAVE).click()


















